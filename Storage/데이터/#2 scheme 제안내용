조건1 : {전이학습의 base가 되는 모델 M_0가 있을 때, 서로 다른 3가지 방식으로 M_0를 base로 전이학습을 완료한 M_1, M_2, M_3이 있다고 가정}
조건2 : {M_0~M_3 모델들의 Weights들을 모델의 shape를 유지한 numpy로 load한 상태}
조건3 : {M_0~M_3 모델의 같은 위치에 해당하는 Weight가 각각 W_0, W_1, W_2, W_3라고 가정}
조건4 : {M_0 모델의 Weights를 모델의 shape 및 구조를 유지한 채 저장한 numpy 행렬이 있을 때, 이 행렬의 weight값들을 전부 0으로 초기화한 행렬을 base_np라고 가정}

조건5 : {W_1, W_2, W_3 중 가장 작은 값이 W_0보다 작은 경우}
조건6 : {W_1, W_2, W_3 중 가장 큰 값이 W_0보다 큰 경우}

임의위치의 W에 대해 조건5와 조건6을 동시에 만족하는 경우 해당하는 base_np의 Weight 위치에 0으로 저장하고
그렇지 않은 경우 해당하는 base_np의 Weight 위치에 W_1-W_0, W_2-W_0, W_3-W_0 값의 평균값을 저장함

이 때 W 정보를 담고 있는 배열의 형태는

Layer 0 weights:(100, 7808)
Layer 1 weights:(7808,)
Layer 2 weights:(1, 5, 32, 32)
Layer 3 weights:(32,)
Layer 4 weights:(1, 5, 32, 32)
Layer 5 weights:(32,)
Layer 6 weights:(1, 5, 32, 32)
Layer 7 weights:(32,)
Layer 8 weights:(1, 5, 1, 32)
Layer 9 weights:(1,)

위와 같다.




∴ 최종적으론 = M_0 모델의 Weights에 base_np 값을 더해,
   파라미터를 통한 Domain Adaptaion을 유도!

   여기서 문제점은... M_0모델은 특정 레이블을 지정해서 CSI 생성 불가.
   그럼 어떻게 M_0모델이 학습하지 않은 레이블을 분류할 수 있을까?
   관건은 M_0의 Generator일지도 모른다.

   - 생성기에 대해서만 base_np 값의 가중치들을 더하고
     (이 때, 가중치를 epoch를 진행함에 따라 부분적으로 더하는 게 좋지 않을까?)
   - 생성기가 generate한 값으로만 D/C를 학습한다.
   
   이렇게 얻게 된 누락된 레이블에 대해 분류할 가능성이 있는 D/C를
   활용해서 분류정확도 시험을 실시! - 학습하지 않은(누락된) 레이블에 대한 정확도 확인!!
   
   ++ 이게 잘 될 경우 cGAN에 대해서도 Weights 전이를 실시하고
      결과를 확인하면 될 것!